"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userController_1 = require("../controllers/userController");
const auth_1 = require("../middlewares/auth");
const router = express_1.default.Router();
router.post('/login', userController_1.userController.loginUser);
router.post('/register', userController_1.userController.createUser);
router.post('/generate-reset-code', userController_1.userController.generateResetCode);
router.post('/reset-password', userController_1.userController.resetPassword);
router.get('/all', auth_1.isAdmin, userController_1.userController.getAllUsersExceptAdmins);
router.get('/:id', auth_1.authenticateToken, userController_1.userController.getUserById);
router.put('/:id', auth_1.authenticateToken, userController_1.userController.updateUser);
router.delete('/:id', auth_1.isAdmin, userController_1.userController.deactivateUser);
router.put('/:id/activate', auth_1.isAdmin, userController_1.userController.activateUser);
router.put('/:id/profile', auth_1.authenticateToken, userController_1.userController.updateProfile);
router.put('/:id/assign-organizer', auth_1.isAdmin, userController_1.userController.assignRoleOrganizer);
router.put('/:id/assign-admin', auth_1.isAdmin, userController_1.userController.assignRoleAdmin);
router.get('/organizer/:organizerId/attendees', auth_1.isOrganizer, userController_1.userController.getAttendeesForOrganizerEvents);
exports.default = router;
